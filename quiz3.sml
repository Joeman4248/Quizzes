(* (fn x => 3) 4 * 6 *)
(* (fn x => fn y => x+1) 3 *)
(* (fn x => x) (fn x => x) *)
(* (fn x => x*4 ) (5*2)+3 *)
(* (fn f => f) (fn y => 2 - y) 2 *)
(* (fn x => fn y => x + y) 3 2*5 *)
(* (fn f => (fn y => f y) 3) (fn x => x + 4) *)
(* 1 + (fn x => fn y => x * y) 3 4 + 5 *)
(* (fn x => fn y => x * y) 3 * 2 5 + 4 *)
(* (fn f => f 2) (fn y => 2 - y) *)
(* (fn x => x) 3 * 6 *)
(* (fn x => x + 1) (5) * 8 *)
(* (fn x => fn y => 3 * x + y) (5*2) (3*4) *)
(* (fn x => (fn y => x + x)) 4 *)
(* (fn x => fn y => x + 2*y) 2 (3*2) *)
(* (fn f => (fn g => g 5 + 2) f) (fn x => x + x) *)
(* fn x => 2 + 2 *)
(* (fn x => fn y => x * y) (3+2) 10 div 2 *)
(* (fn y => 2 - y) 3 - 5 *)
(* (fn x => if true then 1 else 0) *)
